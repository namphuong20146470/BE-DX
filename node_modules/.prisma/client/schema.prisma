generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Fix the user_activity_log model relation
model user_activity_log {
  id            Int      @id @default(autoincrement())
  ma_nguoi_dung String // User ID
  activity_type String // "login", "logout", "failed_login", etc.
  timestamp     DateTime @default(now())
  ip_address    String?
  user_agent    String?  @db.Text
  details       String?  @db.Text // Additional details about the activity

  // Relation to the accounts table - add relation name
  user accounts? @relation("user_activity_logs", fields: [ma_nguoi_dung], references: [ma_nguoi_dung])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model accounts {
  stt                                       Int                     @unique @default(autoincrement())
  ma_nguoi_dung                             String                  @id @db.VarChar
  ten_dang_nhap                             String                  @unique @db.VarChar
  mat_khau                                  String                  @db.VarChar
  ho_va_ten                                 String                  @db.VarChar
  email                                     String                  @db.VarChar
  so_dien_thoai                             String                  @db.VarChar
  vai_tro                                   String?                 @db.VarChar
  ngay_tao                                  DateTime?               @default(now()) @db.Timestamp(6)
  role                                      role?                   @relation(fields: [vai_tro], references: [ma_vai_tro], onDelete: NoAction, onUpdate: NoAction)
  bills                                     bills[]
  competitors                               competitors[]
  contract_type                             contract_type[]
  contracts                                 contracts[]
  customer_group                            customer_group[]
  customer_interactions                     customer_interactions[]
  customers                                 customers[]
  dx_activity_logs                          dx_activity_logs[]
  interaction_type                          interaction_type[]
  inventory_check                           inventory_check[]
  opportunity_source                        opportunity_source[]
  order_details                             order_details[]
  orders                                    orders[]
  potential_customer                        potential_customer[]
  priority_level                            priority_level[]
  product_type                              product_type[]
  products                                  products[]
  quotation_status                          quotation_status[]
  quotation_type                            quotation_type[]
  quotations                                quotations[]
  stock_out                                 stock_out[]
  task_status                               task_status[]
  warehouse_warehouse_nguoi_taoToaccounts   warehouse[]             @relation("warehouse_nguoi_taoToaccounts")
  warehouse_warehouse_quan_ly_khoToaccounts warehouse[]             @relation("warehouse_quan_ly_khoToaccounts")
  user_activity_logs                        user_activity_log[]     @relation("user_activity_logs")
}

model product_type {
  stt            Int        @unique @default(autoincrement())
  ma_loai_hang   String     @id @db.VarChar
  ten_loai_hang  String     @unique(map: "unique_ten_loai_hang") @db.VarChar
  trang_thai     String?    @db.VarChar
  nguoi_cap_nhat String?    @db.VarChar
  ngay_cap_nhat  DateTime?  @default(now()) @db.Timestamp(6)
  mo_ta          String?
  accounts       accounts?  @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  products       products[]
}

model role {
  stt            Int        @unique @default(autoincrement())
  ma_vai_tro     String     @id @db.VarChar
  vai_tro        String     @unique(map: "unique_vai_tro") @db.VarChar
  nguoi_cap_nhat String?    @db.VarChar
  ngay_cap_nhat  DateTime?  @default(now()) @db.Timestamp(6)
  ghi_chu        String?
  accounts       accounts[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model suppliers {
  stt              Int        @unique @default(autoincrement())
  ma_nha_cung_cap  String     @id @db.VarChar
  ten_nha_cung_cap String     @unique(map: "unique_ten_nha_cung_cap") @db.VarChar
  so_dien_thoai    String?    @db.VarChar
  email            String?    @db.VarChar
  dia_chi          String?    @db.VarChar
  quoc_gia         String?    @db.VarChar
  ma_so_thue       String?    @db.VarChar
  trang_website    String?
  trang_thai       String?    @db.VarChar
  ngay_them_vao    DateTime?  @db.Date
  tong_no_phai_tra Float?     @default(0)
  ghi_chu          String?
  products         products[]
  stock_in         stock_in[]
}

model competitors {
  stt                        Int       @unique @default(autoincrement())
  ma_doi_thu                 String    @id @db.VarChar
  ten_doi_thu                String    @unique(map: "unique_ten_doi_thu") @db.VarChar
  san_pham_canh_tranh        String?   @db.VarChar
  chien_luoc_gia_ca          String?   @db.VarChar
  danh_gia_muc_do_canh_tranh String?   @db.VarChar
  nguoi_cap_nhat             String?   @db.VarChar
  ngay_cap_nhat              DateTime? @default(now()) @db.Timestamp(6)
  ghi_chu                    String?
  accounts                   accounts? @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

model product_images {
  stt           Int     @id @default(autoincrement())
  ma_hang       String? @db.VarChar
  ten_anh       String? @db.VarChar
  duong_dan_anh String?
}

model products {
  stt                 Int           @id @unique @default(autoincrement())
  ma_hang             String        @db.VarChar
  ten_hang            String?       @db.VarChar
  ten_loai_hang       String?       @db.VarChar
  ten_nha_cung_cap    String?       @db.VarChar
  nuoc_xuat_xu        String        @db.VarChar
  trong_luong_tinh    Float?
  gia_thuc            Float
  don_vi_ban_hang     String        @db.VarChar
  tinh_trang_hang_hoa String?       @db.VarChar
  nguoi_cap_nhat      String?       @db.VarChar
  ngay_cap_nhat       DateTime?     @default(now()) @db.Timestamp(6)
  mo_ta               String?
  price_list          String?       @db.VarChar
  ngay_gia            DateTime?     @db.Date
  accounts            accounts?     @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  product_type        product_type? @relation(fields: [ten_loai_hang], references: [ma_loai_hang], onDelete: NoAction, onUpdate: NoAction)
  suppliers           suppliers?    @relation(fields: [ten_nha_cung_cap], references: [ma_nha_cung_cap], onDelete: NoAction, onUpdate: NoAction)
}

model bills {
  stt                                       Int             @unique @default(autoincrement())
  ma_bill                                   String          @id @db.VarChar
  nguoi_cap_nhat                            String?         @db.VarChar
  ngay_cap_nhat                             DateTime?       @default(now()) @db.Timestamp(6)
  ghi_chu                                   String?
  accounts                                  accounts?       @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  order_details_order_details_hawb_1Tobills order_details[] @relation("order_details_hawb_1Tobills")
  order_details_order_details_hawb_2Tobills order_details[] @relation("order_details_hawb_2Tobills")
  order_details_order_details_hawb_3Tobills order_details[] @relation("order_details_hawb_3Tobills")
  order_details_order_details_hawb_4Tobills order_details[] @relation("order_details_hawb_4Tobills")
  order_details_order_details_hawb_5Tobills order_details[] @relation("order_details_hawb_5Tobills")
  stock_in                                  stock_in[]
}

model business_tasks {
  stt                     Int             @unique @default(autoincrement())
  ma_cong_viec_kinh_doanh String          @id @db.VarChar
  ten_cong_viec           String          @db.VarChar
  noi_dung_cong_viec      String?
  khach_hang_lien_quan    String?         @db.VarChar
  trang_thai_cong_viec    String?         @db.VarChar
  do_uu_tien              String?         @db.VarChar
  ngay_bat_dau            DateTime        @db.Date
  ngay_ket_thuc           DateTime        @db.Date
  ngay_hoan_thanh         DateTime?       @db.Date
  so_ngay_con_lai         Int
  tep_dinh_kem            String?         @db.VarChar
  ghi_chu                 String?
  priority_level          priority_level? @relation(fields: [do_uu_tien], references: [ma_do_uu_tien], onDelete: NoAction, onUpdate: NoAction)
  task_status             task_status?    @relation(fields: [trang_thai_cong_viec], references: [ma_trang_thai_cong_viec], onDelete: NoAction, onUpdate: NoAction)
}

model contract_type {
  stt               Int         @unique @default(autoincrement())
  ma_loai_hop_dong  String      @id @db.VarChar
  ten_loai_hop_dong String      @unique(map: "unique_ten_loai_hop_dong") @db.VarChar
  tinh_trang        String?     @db.VarChar
  nguoi_cap_nhat    String?     @db.VarChar
  ngay_cap_nhat     DateTime?   @default(now()) @db.Timestamp(6)
  mo_ta             String?
  accounts          accounts?   @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  contracts         contracts[]
}

model contracts {
  stt                   Int             @unique @default(autoincrement())
  so_hop_dong           String          @id @db.VarChar
  loai_hop_dong         String?         @db.VarChar
  ngay_ky_hop_dong      DateTime?       @db.Date
  ngay_bat_dau          DateTime?       @db.Date
  ngay_ket_thuc         DateTime?       @db.Date
  gia_tri_hop_dong      Float?          @default(0)
  trang_thai_hop_dong   String?         @db.VarChar
  doi_tac_lien_quan     String?         @db.VarChar
  dieu_khoan_thanh_toan String?         @db.VarChar
  tep_dinh_kem          String?         @db.VarChar
  vi_tri_luu_tru        String?
  nguoi_tao             String?         @db.VarChar
  ghi_chu               String?
  contract_type         contract_type?  @relation(fields: [loai_hop_dong], references: [ma_loai_hop_dong], onDelete: NoAction, onUpdate: NoAction)
  accounts              accounts?       @relation(fields: [nguoi_tao], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  order_details         order_details[]
  stock_in              stock_in[]
}

model customer_group {
  stt                Int                  @unique @default(autoincrement())
  ma_nhom_khach_hang String               @id @db.VarChar
  nhom_khach_hang    String               @unique(map: "unique_nhom_khach_hang") @db.VarChar
  mo_ta              String?
  nguoi_cap_nhat     String?              @db.VarChar
  ngay_cap_nhat      DateTime?            @default(now()) @db.Timestamp(6)
  accounts           accounts?            @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  potential_customer potential_customer[]
}

model customer_interactions {
  stt                     Int               @unique @default(autoincrement())
  ma_tuong_tac_khach_hang String            @id @db.VarChar
  ten_khach_hang          String?           @db.VarChar
  nguoi_phu_trach         String?           @db.VarChar
  loai_tuong_tac          String?           @db.VarChar
  hinh_thuc_goi           String?           @db.VarChar
  thoi_gian               DateTime          @db.Timestamp(6)
  noi_dung_tuong_tac      String?
  interaction_type        interaction_type? @relation(fields: [loai_tuong_tac], references: [ma_loai_tuong_tac], onDelete: NoAction, onUpdate: NoAction)
  accounts                accounts?         @relation(fields: [nguoi_phu_trach], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model customers {
  stt              Int             @unique @default(autoincrement())
  ma_khach_hang    String          @id @db.VarChar
  ten_khach_hang   String          @unique(map: "unique_ten_khach_hang2") @db.VarChar
  nguoi_phu_trach  String?         @db.VarChar
  ma_so_thue       String?         @db.VarChar
  dia_chi_cu_the   String?
  tinh_thanh       String?         @db.VarChar
  so_dien_thoai    String?         @db.VarChar
  email            String?         @db.VarChar
  nguoi_lien_he    String?
  ngay_them_vao    DateTime?       @db.Date
  tong_no_phai_thu Float?          @default(0)
  ghi_chu          String?
  accounts         accounts?       @relation(fields: [nguoi_phu_trach], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  order_details    order_details[]
  stock_out        stock_out[]
}

model dx_activity_logs {
  stt               Int       @unique @default(autoincrement())
  ma_hoat_dong_dx   String    @id @db.VarChar
  ten_nguoi_dung    String?   @db.VarChar
  ngay_hoat_dong    String    @db.VarChar
  loai_hoat_dong    String    @db.VarChar
  mo_ta_ngan        String?   @db.VarChar
  noi_dung_chi_tiet String?   @db.VarChar
  accounts          accounts? @relation(fields: [ten_nguoi_dung], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

model interaction_type {
  stt                   Int                     @unique @default(autoincrement())
  ma_loai_tuong_tac     String                  @id @db.VarChar
  loai_tuong_tac        String                  @db.VarChar
  trang_thai            String?                 @db.VarChar
  nguoi_cap_nhat        String?                 @db.VarChar
  ngay_cap_nhat         DateTime?               @default(now()) @db.Timestamp(6)
  customer_interactions customer_interactions[]
  accounts              accounts?               @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  nam               Int
  stt               Int               @default(autoincrement())
  ma_inventory      String            @id @db.VarChar
  ma_hang           String?           @db.VarChar
  ten_kho           String?           @db.VarChar
  ton_truoc_do      Int
  tong_nhap         Int
  tong_xuat         Int
  ton_hien_tai      Int
  muc_ton_toi_thieu Int
  warehouse         warehouse?        @relation(fields: [ten_kho], references: [ma_kho], onDelete: NoAction, onUpdate: NoAction)
  inventory_check   inventory_check[]
}

model inventory_check {
  nam                        Int
  stt                        Int        @unique @default(autoincrement())
  ma_kiem_ke                 String     @id @db.VarChar
  ma_hang                    String?    @db.VarChar
  ten_kho                    String?    @db.VarChar
  so_luong_he_thong_ghi_nhan String?    @db.VarChar
  so_luong_thuc_te           Int
  chenh_lech                 Int
  ngay_thuc_hien_kiem_ke     DateTime   @db.Date
  nguoi_kiem_ke              String?    @db.VarChar
  ghi_chu                    String?
  accounts                   accounts?  @relation(fields: [nguoi_kiem_ke], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  inventory                  inventory? @relation(fields: [so_luong_he_thong_ghi_nhan], references: [ma_inventory], onDelete: NoAction, onUpdate: NoAction)
  warehouse                  warehouse? @relation(fields: [ten_kho], references: [ma_kho], onDelete: NoAction, onUpdate: NoAction)
}

model opportunity_source {
  stt                Int                  @unique @default(autoincrement())
  ma_nguon           String               @id @db.VarChar
  nguon              String               @unique(map: "unique_nguon") @db.VarChar
  trang_thai         String?              @db.VarChar
  nguoi_cap_nhat     String?              @db.VarChar
  ngay_cap_nhat      DateTime?            @default(now()) @db.Timestamp(6)
  accounts           accounts?            @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  potential_customer potential_customer[]
}

model order_details {
  stt                               Int        @unique @default(autoincrement())
  ma_chi_tiet_don_hang              String     @id @db.VarChar
  ma_hang                           String?    @db.VarChar
  so_luong                          Int
  ngay_dat_hang                     DateTime   @db.Date
  ma_hop_dong                       String?    @db.VarChar
  so_xac_nhan_don_hang              String?    @db.VarChar
  ten_khach_hang                    String?    @db.VarChar
  nguoi_phu_trach                   String?    @db.VarChar
  ngay_tam_ung                      DateTime?  @db.Date
  tu_ngay                           DateTime?  @db.Date
  den_ngay                          DateTime?  @db.Date
  tinh_trang_don_hang               String?    @db.VarChar
  hang_bao_ngay_du_kien_lan_1       DateTime?  @db.Date
  hang_bao_ngay_du_kien_lan_2       DateTime?  @db.Date
  invoice_1                         String?    @db.VarChar
  packing_list_1                    String?    @db.VarChar
  so_luong_lo_1                     Int?
  hawb_1                            String?    @db.VarChar
  invoice_2                         String?    @db.VarChar
  packing_list_2                    String?    @db.VarChar
  so_luong_lo_2                     Int?
  hawb_2                            String?    @db.VarChar
  invoice_3                         String?    @db.VarChar
  packing_list_3                    String?    @db.VarChar
  so_luong_lo_3                     Int?
  hawb_3                            String?    @db.VarChar
  invoice_4                         String?    @db.VarChar
  packing_list_4                    String?    @db.VarChar
  so_luong_lo_4                     Int?
  hawb_4                            String?    @db.VarChar
  invoice_5                         String?    @db.VarChar
  packing_list_5                    String?    @db.VarChar
  so_luong_lo_5                     Int?
  hawb_5                            String?    @db.VarChar
  so_luong_hang_chua_ve             Int?
  ghi_chu                           String?
  bills_order_details_hawb_1Tobills bills?     @relation("order_details_hawb_1Tobills", fields: [hawb_1], references: [ma_bill], onDelete: NoAction, onUpdate: NoAction)
  bills_order_details_hawb_2Tobills bills?     @relation("order_details_hawb_2Tobills", fields: [hawb_2], references: [ma_bill], onDelete: NoAction, onUpdate: NoAction)
  bills_order_details_hawb_3Tobills bills?     @relation("order_details_hawb_3Tobills", fields: [hawb_3], references: [ma_bill], onDelete: NoAction, onUpdate: NoAction)
  bills_order_details_hawb_4Tobills bills?     @relation("order_details_hawb_4Tobills", fields: [hawb_4], references: [ma_bill], onDelete: NoAction, onUpdate: NoAction)
  bills_order_details_hawb_5Tobills bills?     @relation("order_details_hawb_5Tobills", fields: [hawb_5], references: [ma_bill], onDelete: NoAction, onUpdate: NoAction)
  contracts                         contracts? @relation(fields: [ma_hop_dong], references: [so_hop_dong], onDelete: NoAction, onUpdate: NoAction)
  accounts                          accounts?  @relation(fields: [nguoi_phu_trach], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  orders                            orders?    @relation(fields: [so_xac_nhan_don_hang], references: [so_don_hang], onDelete: NoAction, onUpdate: NoAction)
  customers                         customers? @relation(fields: [ten_khach_hang], references: [ma_khach_hang], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  stt                   Int             @unique @default(autoincrement())
  so_don_hang           String          @id @db.VarChar
  tong_gia_tri_don_hang Float?          @default(0)
  nguoi_lap_don         String?         @db.VarChar
  ngay_tao_don          DateTime?       @default(now()) @db.Timestamp(6)
  ghi_chu               String?
  order_details         order_details[]
  accounts              accounts?       @relation(fields: [nguoi_lap_don], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model potential_customer {
  stt                     Int                 @unique @default(autoincrement())
  ma_khach_hang_tiem_nang String              @id @db.VarChar
  ten_khach_hang          String              @unique(map: "unique_ten_khach_hang1") @db.VarChar
  nguoi_phu_trach         String?             @db.VarChar
  hanh_dong_tiep_theo     String?             @db.VarChar
  ngay_lien_lac_tiep_theo DateTime?           @db.Date
  so_lan_da_lien_lac      Int
  muc_dich                String?             @db.VarChar
  nhom_khach_hang         String?             @db.VarChar
  nguon_tiep_can          String?             @db.VarChar
  tinh_trang              String?             @db.VarChar
  ngay_them_vao           DateTime?           @db.Date
  email                   String?             @db.VarChar
  so_dien_thoai           String?             @db.VarChar
  website                 String?             @db.VarChar
  dia_chi_cu_the          String?
  tinh_thanh              String?             @db.VarChar
  ghi_chu                 String?
  accounts                accounts?           @relation(fields: [nguoi_phu_trach], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  opportunity_source      opportunity_source? @relation(fields: [nguon_tiep_can], references: [ma_nguon], onDelete: NoAction, onUpdate: NoAction)
  customer_group          customer_group?     @relation(fields: [nhom_khach_hang], references: [ma_nhom_khach_hang], onDelete: NoAction, onUpdate: NoAction)
}

model priority_level {
  stt            Int              @unique @default(autoincrement())
  ma_do_uu_tien  String           @id @db.VarChar
  do_uu_tien     String           @unique(map: "unique_do_uu_tien") @db.VarChar
  mau_nhan       String?          @db.VarChar
  mo_ta          String?
  nguoi_cap_nhat String?          @db.VarChar
  ngay_cap_nhat  DateTime?        @default(now()) @db.Timestamp(6)
  business_tasks business_tasks[]
  accounts       accounts?        @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

model quotation_status {
  stt                   Int          @unique @default(autoincrement())
  ma_trang_thai_bao_gia String       @id @db.VarChar
  trang_thai_bao_gia    String       @unique(map: "unique_trang_thai_bao_gia") @db.VarChar
  mo_ta                 String?
  nguoi_cap_nhat        String?      @db.VarChar
  ngay_cap_nhat         DateTime?    @default(now()) @db.Timestamp(6)
  accounts              accounts?    @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  quotations            quotations[]
}

model quotation_type {
  stt             Int          @unique @default(autoincrement())
  ma_loai_bao_gia String       @id @db.VarChar
  loai_bao_gia    String       @unique(map: "unique_loai_bao_gia") @db.VarChar
  trang_thai      String?      @db.VarChar
  nguoi_cap_nhat  String?      @db.VarChar
  ngay_cap_nhat   DateTime?    @default(now()) @db.Timestamp(6)
  accounts        accounts?    @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  quotations      quotations[]
}

model quotations {
  stt              Int               @unique @default(autoincrement())
  so_bao_gia       String            @id @db.VarChar
  tinh_trang       String?           @db.VarChar
  tieu_de          String?           @db.VarChar
  ten_khach_hang   String            @db.VarChar
  loai_bao_gia     String?           @db.VarChar
  ngay_bao_gia     DateTime          @db.Date
  price_list       String            @db.VarChar
  so_dien_thoai    String?           @db.VarChar
  nguoi_lien_he    String?           @db.VarChar
  nguoi_phu_trach  String?           @db.VarChar
  tong_tri_gia     Float?            @default(0)
  ghi_chu          String?
  quotation_type   quotation_type?   @relation(fields: [loai_bao_gia], references: [ma_loai_bao_gia], onDelete: NoAction, onUpdate: NoAction)
  accounts         accounts?         @relation(fields: [nguoi_phu_trach], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  quotation_status quotation_status? @relation(fields: [tinh_trang], references: [ma_trang_thai_bao_gia], onDelete: NoAction, onUpdate: NoAction)
}

model stock_in {
  stt              Int        @unique @default(autoincrement())
  ma_stock_in      String     @id @db.VarChar
  ma_hang          String?    @db.VarChar
  ngay_nhap_hang   DateTime   @db.Date
  so_luong_nhap    Int
  ten_nha_cung_cap String?    @db.VarChar
  ten_kho          String?    @db.VarChar
  ma_bill          String?    @db.VarChar
  ma_hop_dong      String?    @db.VarChar
  bills            bills?     @relation(fields: [ma_bill], references: [ma_bill], onDelete: NoAction, onUpdate: NoAction)
  contracts        contracts? @relation(fields: [ma_hop_dong], references: [so_hop_dong], onDelete: NoAction, onUpdate: NoAction)
  warehouse        warehouse? @relation(fields: [ten_kho], references: [ma_kho], onDelete: NoAction, onUpdate: NoAction)
  suppliers        suppliers? @relation(fields: [ten_nha_cung_cap], references: [ma_nha_cung_cap], onDelete: NoAction, onUpdate: NoAction)
}

model stock_out {
  stt             Int        @unique @default(autoincrement())
  ma_stock_out    String     @id @db.VarChar
  ma_hang         String?    @db.VarChar
  ngay_xuat_hang  DateTime   @db.Date
  so_luong_xuat   Int
  ten_kho         String?    @db.VarChar
  ten_khach_hang  String?    @db.VarChar
  nguoi_phu_trach String?    @db.VarChar
  accounts        accounts?  @relation(fields: [nguoi_phu_trach], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  customers       customers? @relation(fields: [ten_khach_hang], references: [ma_khach_hang], onDelete: NoAction, onUpdate: NoAction)
  warehouse       warehouse? @relation(fields: [ten_kho], references: [ma_kho], onDelete: NoAction, onUpdate: NoAction)
}

model task_status {
  stt                     Int              @unique @default(autoincrement())
  ma_trang_thai_cong_viec String           @id @db.VarChar
  trang_thai_cong_viec    String           @unique(map: "unique_trang_thai_cong_viec") @db.VarChar
  nguoi_cap_nhat          String?          @db.VarChar
  ngay_cap_nhat           DateTime?        @default(now()) @db.Timestamp(6)
  business_tasks          business_tasks[]
  accounts                accounts?        @relation(fields: [nguoi_cap_nhat], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}

model warehouse {
  stt                                      Int               @unique @default(autoincrement())
  ma_kho                                   String            @id @db.VarChar
  ten_kho                                  String            @unique(map: "unique_ten_kho") @db.VarChar
  vi_tri_kho                               String            @db.VarChar
  tinh_trang                               String?           @db.VarChar
  nguoi_tao                                String?           @db.VarChar
  ngay_tao                                 DateTime?         @default(now()) @db.Timestamp(6)
  quan_ly_kho                              String?           @db.VarChar
  ngay_kiem_ke_gan_nhat                    DateTime?         @db.Date
  tong_gia_tri_nhap                        Float?            @default(0)
  tong_gia_tri_xuat                        Float?            @default(0)
  tong_gia_tri_ton_kho                     Float?            @default(0)
  ghi_chu                                  String?
  inventory                                inventory[]
  inventory_check                          inventory_check[]
  stock_in                                 stock_in[]
  stock_out                                stock_out[]
  accounts_warehouse_nguoi_taoToaccounts   accounts?         @relation("warehouse_nguoi_taoToaccounts", fields: [nguoi_tao], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
  accounts_warehouse_quan_ly_khoToaccounts accounts?         @relation("warehouse_quan_ly_khoToaccounts", fields: [quan_ly_kho], references: [ma_nguoi_dung], onDelete: NoAction, onUpdate: NoAction)
}
